#!/bin/sh

# This script must be run as root user [uid 0]
# as it writes to the the deny file
#
# Script detects unauthorised attempts to access
# Bans the clowns by adding an entry to /etc/hosts.deny file
# JWG NOV 2020

if [ `whoami` != "root" ]; then
    echo "Script requires root privileges to perform correctly."
    echo "Please re-run this script as $(tput setaf 1)root$(tput sgr0)."
	exit 1
fi

# Check to see if the scan block table exists, and if not, create it
test -f /root/ssh-scan-blocked-table || sudo touch /root/ssh-scan-blocked-table

# Set requisite variables
block_table="/root/ssh-scan-blocked-table"
authlog_path="/var/log/syslog"
white_list="127.0.0.1"

# Get the IPs of people trying to masquerade as invalid users from syslog
# Raspberry Pi mod - requires field 14, not 12
infected_list=$(awk '/authentication failure/ { print $14 }' $authlog_path | cut -c7-99)

# We require unique IP addresses
infected_list=$(echo "$infected_list" | sort | uniq)

# Grab those IP addresses that have already been blocked
blocked=$(cat $block_table)
for infected in $infected_list; do

        echo $white_list | grep -v $infected > /dev/null
        if [ $? = 0 ]; then

                echo $blocked | grep $infected > /dev/null
                if [ $? != 0 ]; then
                        echo -n "$(date '+%b %d %T'): Miscreant host detected $infected"
                        echo -n " - Adding IP Address to the blocked hosts table: "
                        echo $infected
                        echo $infected >> $block_table


                        # Whack the IP addresses in the /etc/hosts.deny file
			# to stop the clowns from ever knocking on your door again
			
			echo "$infected"; echo "sshd: $infected" >> /etc/hosts.deny
                        logger "Unix/Linux $0 has been activated and blatted IP address $infected on the head"
			echo "Restarting SSH service..."
			service ssh restart; sleep 1
                fi
        fi
done
